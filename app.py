import streamlit as st
import pandas as pd
import re
from openpyxl import load_workbook
from hijri_converter import convert

# ุฅุนุฏุงุฏ ุงูุตูุญุฉ
st.set_page_config(page_title="ูุณุงุนุฏ ุงูุจุญูุซ ูุงูุฏุฑุงุณุงุช", page_icon="๐", layout="wide")

# CSS ูุชุนุฏูู ุงุชุฌุงู ุงููุต ููููู ูู ุงููููู ูููุณุงุฑ
st.markdown("""
<style>
    .main { direction: rtl; text-align: right; }
</style>
""", unsafe_allow_html=True)

st.title("๐ ูุณุงุนุฏ ุงูุจุญูุซ ูุงูุฏุฑุงุณุงุช")

st.markdown("""
**ูุฑุญุจูุง ุจู ูู ูุณุงุนุฏ ุฅุฏุงุฑุฉ ุงูุจุญูุซ ูุงูุฏุฑุงุณุงุช**

๐น * ุงุจุญุซ ุนู ุฃู ุจุญุซ ุฃู ุฏุฑุงุณุฉ ุจูููุฉ ููุชุงุญููุฉ *

ูุณุฃู ุงููู ููุง ูููู ุงูุชูููู ูุงูุณุฏุงุฏ
""")

# ุชุญููู ุงูุจูุงูุงุช
file_path = "C:\\Users\\user\\OneDrive\\ุณุทุญ ุงูููุชุจ\\ูุณุงุนุฏ ุงูุฏุฑุงุณุงุช\\ูุฌููุน ุงูุฏุฑุงุณุงุช.xlsx"
wb = load_workbook(filename=file_path, data_only=True)
sheet = wb["ูุฑูุฉ1"]

# ูุฑุงุกุฉ ุงูุจูุงูุงุช ูุชุญููู ุงูุชุงุฑูุฎ ุฅูู ูุฌุฑู
data = []
for row in sheet.iter_rows():
    row_data = []
    for cell in row:
        if cell.is_date and cell.value:
            try:
                if 1900 <= cell.value.year <= 2100:
                    hijri_date = convert.Gregorian(cell.value.year, cell.value.month, cell.value.day).to_hijri()
                    row_data.append(f"{hijri_date.year}-{hijri_date.month}-{hijri_date.day}")
                else:
                    row_data.append(str(cell.value))
            except:
                row_data.append(str(cell.value))
        else:
            row_data.append(str(cell.value) if cell.value is not None else "")
    data.append(row_data)

# ุชุญููููุง ุฅูู DataFrame
df = pd.DataFrame(data[1:], columns=data[0])

# ุญุฐู ุงูุฃุนูุฏุฉ ูู ููุถูุน 4 ุฅูู ููุถูุน 13
cols_to_drop = [col for col in df.columns if 'ููุถูุน' in col and any(str(i) in col for i in range(4,14))]
df = df.drop(columns=cols_to_drop)

# ุญุฐู ุงูุนููุฏ ุงูุฃูู ุฅุฐุง ูู ููู ูู ุนููุฏ (ู)
if df.columns[0] != "ู":
    df = df.drop(df.columns[0], axis=1)

# ุฏุงูุฉ ุฅุฒุงูุฉ ุงูุชุดููู ูุงูููุฒุงุช
def normalize_arabic(text):
    text = str(text)
    text = re.sub(r'[ููููููููู]', '', text)
    text = re.sub(r'[ุฅุฃุขุง]', 'ุง', text)
    text = re.sub(r'[ุคุฆ]', 'ุก', text)
    text = re.sub(r'ุฉ', 'ู', text)
    return text

# ูุงุฌูุฉ ุงูุจุญุซ
st.markdown("---")
study_name = st.text_input("๐ ุชูุถูู ุจุงูุงุณุชูุณุงุฑ ุนู ุฃู ุฏุฑุงุณุฉ:")

if study_name:
    pattern = re.compile(normalize_arabic(study_name), re.IGNORECASE)
    filtered_data = df[df.apply(lambda row: row.astype(str).apply(lambda x: bool(pattern.search(normalize_arabic(str(x))))).any(), axis=1)]

    if not filtered_data.empty:
        st.success(f"โ ุชู ุงูุนุซูุฑ ุนูู {len(filtered_data)} ูุชูุฌุฉ ูุทุงุจูุฉ.")
        filtered_data = filtered_data.set_index("ู")
        st.dataframe(filtered_data, use_container_width=True)
    else:
        st.warning("ูู ูุชู ุงูุนุซูุฑ ุนูู ุฃู ุชูุงุตูู ุชุฎุตู ูุง ุชูุถููุชู ุจู ")
else:
    st.info("๐ ุงูุฑุฌุงุก ูุชุงุจุฉ ูููุฉ ููุชุงุญูุฉ ")
